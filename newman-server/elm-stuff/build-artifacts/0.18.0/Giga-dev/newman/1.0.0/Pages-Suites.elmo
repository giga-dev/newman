var _Giga_dev$newman$Pages_Suites$filterQuery = F2(
	function (query, suite) {
		return (_elm_lang$core$Native_Utils.eq(
			_elm_lang$core$String$length(query),
			0) || (A2(_elm_lang$core$String$startsWith, query, suite.name) || A2(_elm_lang$core$String$startsWith, query, suite.id))) ? true : false;
	});
var _Giga_dev$newman$Pages_Suites$viewSuite = function (suite) {
	return A2(
		_elm_lang$html$Html$tr,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$a,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$href(
						A2(_elm_lang$core$Basics_ops['++'], '#suite/', suite.id)),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(suite.name),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$td,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(suite.id),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$td,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(suite.customVariables),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _Giga_dev$newman$Pages_Suites$updateAll = F2(
	function (f, model) {
		var newList = f(model.allSuites);
		var filtered = A2(
			_elm_lang$core$List$filter,
			_Giga_dev$newman$Pages_Suites$filterQuery(model.query),
			newList);
		var newPaginated = A2(
			_jschomay$elm_paginate$Paginate$map,
			function (_p0) {
				return filtered;
			},
			model.suites);
		return _elm_lang$core$Native_Utils.update(
			model,
			{suites: newPaginated, allSuites: newList});
	});
var _Giga_dev$newman$Pages_Suites$updateSuiteAdded = F2(
	function (model, addedSuite) {
		return A2(
			_Giga_dev$newman$Pages_Suites$updateAll,
			function (list) {
				return {ctor: '::', _0: addedSuite, _1: list};
			},
			model);
	});
var _Giga_dev$newman$Pages_Suites$updateSuiteUpdated = F2(
	function (model, suiteToUpdate) {
		var f = function (l) {
			var _p1 = A2(
				_elm_community$list_extra$List_Extra$find,
				function (item) {
					return _elm_lang$core$Native_Utils.eq(item.id, suiteToUpdate.id);
				},
				l);
			if (_p1.ctor === 'Just') {
				return A3(
					_elm_community$list_extra$List_Extra$replaceIf,
					function (item) {
						return _elm_lang$core$Native_Utils.eq(item.id, suiteToUpdate.id);
					},
					suiteToUpdate,
					l);
			} else {
				return {ctor: '::', _0: suiteToUpdate, _1: l};
			}
		};
		return A2(_Giga_dev$newman$Pages_Suites$updateAll, f, model);
	});
var _Giga_dev$newman$Pages_Suites$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'GetSuitesCompleted':
				var _p3 = _p2._0;
				if (_p3.ctor === 'Ok') {
					var _p4 = _p3._0;
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								suites: A2(_jschomay$elm_paginate$Paginate$fromList, model.pageSize, _p4),
								allSuites: _p4
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'First':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							suites: _jschomay$elm_paginate$Paginate$first(model.suites)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Last':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							suites: _jschomay$elm_paginate$Paginate$last(model.suites)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Next':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							suites: _jschomay$elm_paginate$Paginate$next(model.suites)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Prev':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							suites: _jschomay$elm_paginate$Paginate$prev(model.suites)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'GoTo':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							suites: A2(_jschomay$elm_paginate$Paginate$goTo, _p2._0, model.suites)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'FilterQuery':
				var _p5 = _p2._0;
				var filteredList = A2(
					_elm_lang$core$List$filter,
					_Giga_dev$newman$Pages_Suites$filterQuery(_p5),
					model.allSuites);
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							query: _p5,
							suites: A2(_jschomay$elm_paginate$Paginate$fromList, model.pageSize, filteredList)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				var _p6 = _p2._0;
				switch (_p6.ctor) {
					case 'CreatedSuite':
						return {
							ctor: '_Tuple2',
							_0: A2(_Giga_dev$newman$Pages_Suites$updateSuiteAdded, model, _p6._0),
							_1: _elm_lang$core$Platform_Cmd$none
						};
					case 'ModifiedSuite':
						return {
							ctor: '_Tuple2',
							_0: A2(_Giga_dev$newman$Pages_Suites$updateSuiteUpdated, model, _p6._0),
							_1: _elm_lang$core$Platform_Cmd$none
						};
					default:
						return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
		}
	});
var _Giga_dev$newman$Pages_Suites$Model = F4(
	function (a, b, c, d) {
		return {allSuites: a, suites: b, pageSize: c, query: d};
	});
var _Giga_dev$newman$Pages_Suites$WebSocketEvent = function (a) {
	return {ctor: 'WebSocketEvent', _0: a};
};
var _Giga_dev$newman$Pages_Suites$handleEvent = function (event) {
	return A2(_Giga_dev$newman$Utils_WebSocket_ops['=>'], event, _Giga_dev$newman$Pages_Suites$WebSocketEvent);
};
var _Giga_dev$newman$Pages_Suites$FilterQuery = function (a) {
	return {ctor: 'FilterQuery', _0: a};
};
var _Giga_dev$newman$Pages_Suites$GoTo = function (a) {
	return {ctor: 'GoTo', _0: a};
};
var _Giga_dev$newman$Pages_Suites$Prev = {ctor: 'Prev'};
var _Giga_dev$newman$Pages_Suites$Next = {ctor: 'Next'};
var _Giga_dev$newman$Pages_Suites$Last = {ctor: 'Last'};
var _Giga_dev$newman$Pages_Suites$First = {ctor: 'First'};
var _Giga_dev$newman$Pages_Suites$view = function (model) {
	var pagerButtonView = F2(
		function (index, isActive) {
			var _p7 = isActive;
			if (_p7 === true) {
				return A2(
					_elm_lang$html$Html$li,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('page-item active'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$button,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('page-link'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(
									_elm_lang$core$Basics$toString(index)),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$span,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('sr-only'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('(current)'),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}
							}),
						_1: {ctor: '[]'}
					});
			} else {
				return A2(
					_elm_lang$html$Html$li,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('page-item'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(
								_Giga_dev$newman$Pages_Suites$GoTo(index)),
							_1: {ctor: '[]'}
						}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$button,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('page-link'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(
									_elm_lang$core$Basics$toString(index)),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					});
			}
		});
	var nextButtons = {
		ctor: '::',
		_0: A2(
			_elm_lang$html$Html$li,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('page-item'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$classList(
						{
							ctor: '::',
							_0: {
								ctor: '_Tuple2',
								_0: 'disabled',
								_1: _jschomay$elm_paginate$Paginate$isLast(model.suites)
							},
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(_Giga_dev$newman$Pages_Suites$Next),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$button,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('page-link'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('›'),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$li,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('page-item'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$classList(
							{
								ctor: '::',
								_0: {
									ctor: '_Tuple2',
									_0: 'disabled',
									_1: _jschomay$elm_paginate$Paginate$isLast(model.suites)
								},
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(_Giga_dev$newman$Pages_Suites$Last),
							_1: {ctor: '[]'}
						}
					}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$button,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('page-link'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('»'),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		}
	};
	var prevButtons = {
		ctor: '::',
		_0: A2(
			_elm_lang$html$Html$li,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('page-item'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$classList(
						{
							ctor: '::',
							_0: {
								ctor: '_Tuple2',
								_0: 'disabled',
								_1: _jschomay$elm_paginate$Paginate$isFirst(model.suites)
							},
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(_Giga_dev$newman$Pages_Suites$First),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$button,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('page-link'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('«'),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$li,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('page-item'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$classList(
							{
								ctor: '::',
								_0: {
									ctor: '_Tuple2',
									_0: 'disabled',
									_1: _jschomay$elm_paginate$Paginate$isFirst(model.suites)
								},
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(_Giga_dev$newman$Pages_Suites$Prev),
							_1: {ctor: '[]'}
						}
					}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$button,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('page-link'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('‹'),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		}
	};
	var pagination = A2(
		_elm_lang$html$Html$nav,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$ul,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('pagination '),
					_1: {ctor: '[]'}
				},
				A2(
					_elm_lang$core$Basics_ops['++'],
					prevButtons,
					A2(
						_elm_lang$core$Basics_ops['++'],
						A2(_jschomay$elm_paginate$Paginate$pager, pagerButtonView, model.suites),
						nextButtons))),
			_1: {ctor: '[]'}
		});
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('container-fluid'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h2,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('text'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Suites'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('form-inline'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('form-group'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$text(
											{
												ctor: '::',
												_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$onInput(_Giga_dev$newman$Pages_Suites$FilterQuery),
												_1: {
													ctor: '::',
													_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$placeholder('Filter'),
													_1: {
														ctor: '::',
														_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$value(model.query),
														_1: {ctor: '[]'}
													}
												}
											}),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$div,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('form-group'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: pagination,
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$table,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('table table-sm table-bordered table-striped table-nowrap table-hover'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$thead,
										{ctor: '[]'},
										{
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$tr,
												{ctor: '[]'},
												{
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$th,
														{ctor: '[]'},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text('Name'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_elm_lang$html$Html$th,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _elm_lang$html$Html$text('Id'),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_elm_lang$html$Html$th,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html$text('Custom'),
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													}
												}),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$tbody,
											{ctor: '[]'},
											A2(
												_elm_lang$core$List$map,
												_Giga_dev$newman$Pages_Suites$viewSuite,
												_jschomay$elm_paginate$Paginate$page(model.suites))),
										_1: {ctor: '[]'}
									}
								}),
							_1: {
								ctor: '::',
								_0: pagination,
								_1: {ctor: '[]'}
							}
						}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _Giga_dev$newman$Pages_Suites$GetSuitesCompleted = function (a) {
	return {ctor: 'GetSuitesCompleted', _0: a};
};
var _Giga_dev$newman$Pages_Suites$getSuitesCmd = A2(
	_elm_lang$http$Http$send,
	_Giga_dev$newman$Pages_Suites$GetSuitesCompleted,
	A2(_elm_lang$http$Http$get, '/api/newman/suite?all=true', _Giga_dev$newman$Utils_Types$decodeSuites));
var _Giga_dev$newman$Pages_Suites$init = function () {
	var pageSize = 20;
	return {
		ctor: '_Tuple2',
		_0: {
			allSuites: {ctor: '[]'},
			suites: A2(
				_jschomay$elm_paginate$Paginate$fromList,
				pageSize,
				{ctor: '[]'}),
			pageSize: pageSize,
			query: ''
		},
		_1: _Giga_dev$newman$Pages_Suites$getSuitesCmd
	};
}();
