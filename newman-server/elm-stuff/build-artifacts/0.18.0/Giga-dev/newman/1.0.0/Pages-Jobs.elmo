var _Giga_dev$newman$Pages_Jobs$onGetJobsCompleted = F2(
	function (model, result) {
		var _p0 = result;
		if (_p0.ctor === 'Ok') {
			return {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Native_Utils.update(
					model,
					{
						jobsTableModel: _Giga_dev$newman$Views_JobsTable$init(_p0._0)
					}),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		} else {
			var a = A2(_elm_lang$core$Debug$log, 'onGetJobsCompleted', _p0._0);
			return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
		}
	});
var _Giga_dev$newman$Pages_Jobs$getJobs = function (limit) {
	return A2(
		_elm_lang$http$Http$get,
		A2(
			_elm_lang$core$Basics_ops['++'],
			'/api/newman/jobs-view?limit=',
			A2(
				_elm_lang$core$Basics_ops['++'],
				_elm_lang$core$Basics$toString(limit),
				'&orderBy=-submitTime')),
		A2(
			_elm_lang$core$Json_Decode$field,
			'values',
			_elm_lang$core$Json_Decode$list(_Giga_dev$newman$Utils_Types$decodeJobView)));
};
var _Giga_dev$newman$Pages_Jobs$Model = F3(
	function (a, b, c) {
		return {jobsTableModel: a, maxEntries: b, currTime: c};
	});
var _Giga_dev$newman$Pages_Jobs$ApplyJobsNumberAndRetrieveJobs = {ctor: 'ApplyJobsNumberAndRetrieveJobs'};
var _Giga_dev$newman$Pages_Jobs$UpdateJobsNumber = function (a) {
	return {ctor: 'UpdateJobsNumber', _0: a};
};
var _Giga_dev$newman$Pages_Jobs$JobsTableMsg = function (a) {
	return {ctor: 'JobsTableMsg', _0: a};
};
var _Giga_dev$newman$Pages_Jobs$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('form-inline'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$h1,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('jobs-label'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Jobs'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('form-inline jobs-list-max-job-count'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('jobs-list-max-job-count-label'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Max. Job count:'),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$div,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('jobs-list-max-job-count-input'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$number(
												{
													ctor: '::',
													_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$value(
														_elm_lang$core$Basics$toString(model.maxEntries)),
													_1: {
														ctor: '::',
														_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$onInput(_Giga_dev$newman$Pages_Jobs$UpdateJobsNumber),
														_1: {
															ctor: '::',
															_0: _rundis$elm_bootstrap$Bootstrap_Form_Input$attrs(
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html_Attributes$style(
																		{
																			ctor: '::',
																			_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '2px'},
																			_1: {
																				ctor: '::',
																				_0: {ctor: '_Tuple2', _0: 'width', _1: '85px'},
																				_1: {ctor: '[]'}
																			}
																		}),
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													}
												}),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$div,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('jobs-list-max-job-count-button'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(
													_rundis$elm_bootstrap$Bootstrap_Button$button,
													{
														ctor: '::',
														_0: _rundis$elm_bootstrap$Bootstrap_Button$primary,
														_1: {
															ctor: '::',
															_0: _rundis$elm_bootstrap$Bootstrap_Button$onClick(_Giga_dev$newman$Pages_Jobs$ApplyJobsNumberAndRetrieveJobs),
															_1: {ctor: '[]'}
														}
													},
													{
														ctor: '::',
														_0: _elm_lang$html$Html$text('Apply'),
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}
								}
							}),
						_1: {ctor: '[]'}
					}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('container-fluid'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$map,
							_Giga_dev$newman$Pages_Jobs$JobsTableMsg,
							A2(_Giga_dev$newman$Views_JobsTable$viewTable, model.jobsTableModel, model.currTime)),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _Giga_dev$newman$Pages_Jobs$subscriptions = function (model) {
	return A2(
		_elm_lang$core$Platform_Sub$map,
		_Giga_dev$newman$Pages_Jobs$JobsTableMsg,
		_Giga_dev$newman$Views_JobsTable$subscriptions(model.jobsTableModel));
};
var _Giga_dev$newman$Pages_Jobs$handleEvent = function (event) {
	return A2(
		_elm_lang$core$Platform_Cmd$map,
		_Giga_dev$newman$Pages_Jobs$JobsTableMsg,
		_Giga_dev$newman$Views_JobsTable$handleEvent(event));
};
var _Giga_dev$newman$Pages_Jobs$ReceiveTime = function (a) {
	return {ctor: 'ReceiveTime', _0: a};
};
var _Giga_dev$newman$Pages_Jobs$requestTime = A2(_elm_lang$core$Task$perform, _Giga_dev$newman$Pages_Jobs$ReceiveTime, _elm_lang$core$Time$now);
var _Giga_dev$newman$Pages_Jobs$GetJobsCompleted = function (a) {
	return {ctor: 'GetJobsCompleted', _0: a};
};
var _Giga_dev$newman$Pages_Jobs$getJobsCmd = function (limit) {
	return A2(
		_elm_lang$http$Http$send,
		_Giga_dev$newman$Pages_Jobs$GetJobsCompleted,
		_Giga_dev$newman$Pages_Jobs$getJobs(limit));
};
var _Giga_dev$newman$Pages_Jobs$init = function () {
	var maxEntries = 60;
	return {
		ctor: '_Tuple2',
		_0: {
			jobsTableModel: _Giga_dev$newman$Views_JobsTable$init(
				{ctor: '[]'}),
			maxEntries: maxEntries,
			currTime: _elm_lang$core$Maybe$Nothing
		},
		_1: _elm_lang$core$Platform_Cmd$batch(
			{
				ctor: '::',
				_0: _Giga_dev$newman$Pages_Jobs$getJobsCmd(maxEntries),
				_1: {
					ctor: '::',
					_0: _Giga_dev$newman$Pages_Jobs$requestTime,
					_1: {ctor: '[]'}
				}
			})
	};
}();
var _Giga_dev$newman$Pages_Jobs$update = F2(
	function (msg, model) {
		var _p1 = msg;
		switch (_p1.ctor) {
			case 'UpdateMaxEntries':
				var maxEntries = A2(
					_elm_lang$core$Maybe$withDefault,
					1,
					_elm_lang$core$Result$toMaybe(
						_elm_lang$core$String$toInt(_p1._0)));
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{maxEntries: maxEntries}),
					_1: _Giga_dev$newman$Pages_Jobs$getJobsCmd(maxEntries)
				};
			case 'GetJobsCompleted':
				return A2(_Giga_dev$newman$Pages_Jobs$onGetJobsCompleted, model, _p1._0);
			case 'ReceiveTime':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							currTime: _elm_lang$core$Maybe$Just(_p1._0)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'JobsTableMsg':
				var _p2 = A2(_Giga_dev$newman$Views_JobsTable$update, _p1._0, model.jobsTableModel);
				var updatedJobsTableModel = _p2._0;
				var cmd = _p2._1;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{jobsTableModel: updatedJobsTableModel}),
					_1: _elm_lang$core$Platform_Cmd$batch(
						{
							ctor: '::',
							_0: A2(_elm_lang$core$Platform_Cmd$map, _Giga_dev$newman$Pages_Jobs$JobsTableMsg, cmd),
							_1: {
								ctor: '::',
								_0: _Giga_dev$newman$Pages_Jobs$requestTime,
								_1: {ctor: '[]'}
							}
						})
				};
			case 'UpdateJobsNumber':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							maxEntries: A2(
								_elm_lang$core$Result$withDefault,
								1,
								_elm_lang$core$String$toInt(_p1._0))
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							jobsTableModel: _Giga_dev$newman$Views_JobsTable$init(
								{ctor: '[]'})
						}),
					_1: _Giga_dev$newman$Pages_Jobs$getJobsCmd(model.maxEntries)
				};
		}
	});
var _Giga_dev$newman$Pages_Jobs$UpdateMaxEntries = function (a) {
	return {ctor: 'UpdateMaxEntries', _0: a};
};
