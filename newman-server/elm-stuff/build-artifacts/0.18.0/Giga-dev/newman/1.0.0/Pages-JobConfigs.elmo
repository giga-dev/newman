var _Giga_dev$newman$Pages_JobConfigs$viewJobConfig = function (jobConfig) {
	return A2(
		_elm_lang$html$Html$tr,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$a,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$href(
						A2(_elm_lang$core$Basics_ops['++'], '#jobConfig/', jobConfig.id)),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(jobConfig.name),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$td,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(jobConfig.id),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _Giga_dev$newman$Pages_JobConfigs$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('container-fluid'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h2,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('text'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Job Configurations'),
					_1: {
						ctor: '::',
						_0: A2(
							_rundis$elm_bootstrap$Bootstrap_Button$linkButton,
							{
								ctor: '::',
								_0: _rundis$elm_bootstrap$Bootstrap_Button$primary,
								_1: {
									ctor: '::',
									_0: _rundis$elm_bootstrap$Bootstrap_Button$attrs(
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$href('#newJobConfig'),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$style(
													{
														ctor: '::',
														_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '15px'},
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}
										}),
									_1: {ctor: '[]'}
								}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('New Job Configuration'),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$table,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('table table-sm table-bordered table-striped table-nowrap table-hover'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$thead,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$tr,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$th,
													{ctor: '[]'},
													{
														ctor: '::',
														_0: _elm_lang$html$Html$text('Name'),
														_1: {ctor: '[]'}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$th,
														{ctor: '[]'},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text('Id'),
															_1: {ctor: '[]'}
														}),
													_1: {ctor: '[]'}
												}
											}),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$tbody,
										{ctor: '[]'},
										A2(_elm_lang$core$List$map, _Giga_dev$newman$Pages_JobConfigs$viewJobConfig, model.allJobConfigs)),
									_1: {ctor: '[]'}
								}
							}),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _Giga_dev$newman$Pages_JobConfigs$updateAll = F2(
	function (f, model) {
		var newList = f(model.allJobConfigs);
		return _elm_lang$core$Native_Utils.update(
			model,
			{allJobConfigs: newList});
	});
var _Giga_dev$newman$Pages_JobConfigs$updateJobConfigAdded = F2(
	function (model, addedJobConfig) {
		return A2(
			_Giga_dev$newman$Pages_JobConfigs$updateAll,
			function (list) {
				return {ctor: '::', _0: addedJobConfig, _1: list};
			},
			model);
	});
var _Giga_dev$newman$Pages_JobConfigs$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'GetJobConfigsCompleted':
				var _p1 = _p0._0;
				if (_p1.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{allJobConfigs: _p1._0}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					var a = A2(_elm_lang$core$Debug$log, 'onGetJobConfigsCompleted', _p1._0);
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'WebSocketEvent':
				var _p2 = _p0._0;
				if (_p2.ctor === 'CreatedJobConfig') {
					return {
						ctor: '_Tuple2',
						_0: A2(_Giga_dev$newman$Pages_JobConfigs$updateJobConfigAdded, model, _p2._0),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			default:
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
		}
	});
var _Giga_dev$newman$Pages_JobConfigs$Model = function (a) {
	return {allJobConfigs: a};
};
var _Giga_dev$newman$Pages_JobConfigs$OnClickLinkButton = {ctor: 'OnClickLinkButton'};
var _Giga_dev$newman$Pages_JobConfigs$WebSocketEvent = function (a) {
	return {ctor: 'WebSocketEvent', _0: a};
};
var _Giga_dev$newman$Pages_JobConfigs$handleEvent = function (event) {
	return A2(_Giga_dev$newman$Utils_WebSocket_ops['=>'], event, _Giga_dev$newman$Pages_JobConfigs$WebSocketEvent);
};
var _Giga_dev$newman$Pages_JobConfigs$GetJobConfigsCompleted = function (a) {
	return {ctor: 'GetJobConfigsCompleted', _0: a};
};
var _Giga_dev$newman$Pages_JobConfigs$getJobConfigsCmd = A2(
	_elm_lang$http$Http$send,
	_Giga_dev$newman$Pages_JobConfigs$GetJobConfigsCompleted,
	A2(_elm_lang$http$Http$get, '/api/newman/job-config', _Giga_dev$newman$Utils_Types$decodeJobConfigs));
var _Giga_dev$newman$Pages_JobConfigs$init = {
	ctor: '_Tuple2',
	_0: {
		allJobConfigs: {ctor: '[]'}
	},
	_1: _Giga_dev$newman$Pages_JobConfigs$getJobConfigsCmd
};
