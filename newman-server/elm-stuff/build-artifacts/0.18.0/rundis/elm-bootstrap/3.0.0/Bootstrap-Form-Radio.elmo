var _rundis$elm_bootstrap$Bootstrap_Form_Radio$defaultOptions = {
	checked: false,
	name: _elm_lang$core$Maybe$Nothing,
	custom: false,
	inline: false,
	disabled: false,
	onClick: _elm_lang$core$Maybe$Nothing,
	validation: _elm_lang$core$Maybe$Nothing,
	attributes: {ctor: '[]'}
};
var _rundis$elm_bootstrap$Bootstrap_Form_Radio$toAttributes = function (options) {
	return A2(
		_elm_lang$core$Basics_ops['++'],
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class(
				options.custom ? 'custom-control-input' : 'form-check-input'),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$type_('radio'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$disabled(options.disabled),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$checked(options.checked),
						_1: {ctor: '[]'}
					}
				}
			}
		},
		A2(
			_elm_lang$core$Basics_ops['++'],
			A2(
				_elm_lang$core$List$filterMap,
				_elm_lang$core$Basics$identity,
				{
					ctor: '::',
					_0: A2(_elm_lang$core$Maybe$map, _elm_lang$html$Html_Events$onClick, options.onClick),
					_1: {
						ctor: '::',
						_0: A2(_elm_lang$core$Maybe$map, _elm_lang$html$Html_Attributes$name, options.name),
						_1: {ctor: '[]'}
					}
				}),
			options.attributes));
};
var _rundis$elm_bootstrap$Bootstrap_Form_Radio$applyModifier = F2(
	function (modifier, options) {
		var _p0 = modifier;
		switch (_p0.ctor) {
			case 'Checked':
				return _elm_lang$core$Native_Utils.update(
					options,
					{checked: _p0._0});
			case 'Name':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						name: _elm_lang$core$Maybe$Just(_p0._0)
					});
			case 'Inline':
				return _elm_lang$core$Native_Utils.update(
					options,
					{inline: true});
			case 'OnClick':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						onClick: _elm_lang$core$Maybe$Just(_p0._0)
					});
			case 'Custom':
				return _elm_lang$core$Native_Utils.update(
					options,
					{custom: true});
			case 'Disabled':
				return _elm_lang$core$Native_Utils.update(
					options,
					{disabled: _p0._0});
			case 'Validation':
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						validation: _elm_lang$core$Maybe$Just(_p0._0)
					});
			default:
				return _elm_lang$core$Native_Utils.update(
					options,
					{
						attributes: A2(_elm_lang$core$Basics_ops['++'], options.attributes, _p0._0)
					});
		}
	});
var _rundis$elm_bootstrap$Bootstrap_Form_Radio$view = function (_p1) {
	var _p2 = _p1;
	var _p4 = _p2._0;
	var opts = A3(_elm_lang$core$List$foldl, _rundis$elm_bootstrap$Bootstrap_Form_Radio$applyModifier, _rundis$elm_bootstrap$Bootstrap_Form_Radio$defaultOptions, _p4.options);
	var validationAttrs = function () {
		var _p3 = opts.validation;
		if (_p3.ctor === 'Just') {
			return {
				ctor: '::',
				_0: _rundis$elm_bootstrap$Bootstrap_Form_FormInternal$validationWrapperAttribute(_p3._0),
				_1: {ctor: '[]'}
			};
		} else {
			return {ctor: '[]'};
		}
	}();
	return opts.custom ? A2(
		_elm_lang$html$Html$div,
		A2(
			_elm_lang$core$Basics_ops['++'],
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$classList(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'custom-controls-stacked', _1: !opts.inline},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'd-inline-block', _1: opts.inline},
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			},
			validationAttrs),
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$label,
				A2(
					_elm_lang$core$Basics_ops['++'],
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('custom-control custom-radio'),
						_1: {ctor: '[]'}
					},
					validationAttrs),
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$input,
						_rundis$elm_bootstrap$Bootstrap_Form_Radio$toAttributes(opts),
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$span,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('custom-control-indicator'),
								_1: {ctor: '[]'}
							},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$span,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('custom-control-description'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(_p4.label),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				}),
			_1: {ctor: '[]'}
		}) : A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$classList(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'form-check', _1: true},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'form-check-inline', _1: opts.inline},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'disabled', _1: opts.disabled},
							_1: {ctor: '[]'}
						}
					}
				}),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$label,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('form-check-label'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$input,
						_rundis$elm_bootstrap$Bootstrap_Form_Radio$toAttributes(opts),
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							A2(_elm_lang$core$Basics_ops['++'], ' ', _p4.label)),
						_1: {ctor: '[]'}
					}
				}),
			_1: {ctor: '[]'}
		});
};
var _rundis$elm_bootstrap$Bootstrap_Form_Radio$Options = F8(
	function (a, b, c, d, e, f, g, h) {
		return {checked: a, name: b, custom: c, disabled: d, inline: e, onClick: f, validation: g, attributes: h};
	});
var _rundis$elm_bootstrap$Bootstrap_Form_Radio$Radio = function (a) {
	return {ctor: 'Radio', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Radio$create = F2(
	function (options, label) {
		return _rundis$elm_bootstrap$Bootstrap_Form_Radio$Radio(
			{options: options, label: label});
	});
var _rundis$elm_bootstrap$Bootstrap_Form_Radio$radio = F2(
	function (options, label) {
		return _rundis$elm_bootstrap$Bootstrap_Form_Radio$view(
			A2(_rundis$elm_bootstrap$Bootstrap_Form_Radio$create, options, label));
	});
var _rundis$elm_bootstrap$Bootstrap_Form_Radio$addOption = F2(
	function (opt, _p5) {
		var _p6 = _p5;
		return _rundis$elm_bootstrap$Bootstrap_Form_Radio$Radio(
			_elm_lang$core$Native_Utils.update(
				_p6._0,
				{
					options: {ctor: '::', _0: opt, _1: _p6._0.options}
				}));
	});
var _rundis$elm_bootstrap$Bootstrap_Form_Radio$Attrs = function (a) {
	return {ctor: 'Attrs', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Radio$attrs = function (attrs) {
	return _rundis$elm_bootstrap$Bootstrap_Form_Radio$Attrs(attrs);
};
var _rundis$elm_bootstrap$Bootstrap_Form_Radio$Validation = function (a) {
	return {ctor: 'Validation', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Radio$success = _rundis$elm_bootstrap$Bootstrap_Form_Radio$Validation(_rundis$elm_bootstrap$Bootstrap_Form_FormInternal$Success);
var _rundis$elm_bootstrap$Bootstrap_Form_Radio$warning = _rundis$elm_bootstrap$Bootstrap_Form_Radio$Validation(_rundis$elm_bootstrap$Bootstrap_Form_FormInternal$Warning);
var _rundis$elm_bootstrap$Bootstrap_Form_Radio$danger = _rundis$elm_bootstrap$Bootstrap_Form_Radio$Validation(_rundis$elm_bootstrap$Bootstrap_Form_FormInternal$Danger);
var _rundis$elm_bootstrap$Bootstrap_Form_Radio$Disabled = function (a) {
	return {ctor: 'Disabled', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Radio$disabled = function (disabled) {
	return _rundis$elm_bootstrap$Bootstrap_Form_Radio$Disabled(disabled);
};
var _rundis$elm_bootstrap$Bootstrap_Form_Radio$Custom = {ctor: 'Custom'};
var _rundis$elm_bootstrap$Bootstrap_Form_Radio$createCustom = function (options) {
	return _rundis$elm_bootstrap$Bootstrap_Form_Radio$create(
		{ctor: '::', _0: _rundis$elm_bootstrap$Bootstrap_Form_Radio$Custom, _1: options});
};
var _rundis$elm_bootstrap$Bootstrap_Form_Radio$custom = F2(
	function (options, label) {
		return _rundis$elm_bootstrap$Bootstrap_Form_Radio$view(
			A2(_rundis$elm_bootstrap$Bootstrap_Form_Radio$createCustom, options, label));
	});
var _rundis$elm_bootstrap$Bootstrap_Form_Radio$OnClick = function (a) {
	return {ctor: 'OnClick', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Radio$onClick = function (toMsg) {
	return _rundis$elm_bootstrap$Bootstrap_Form_Radio$OnClick(toMsg);
};
var _rundis$elm_bootstrap$Bootstrap_Form_Radio$Name = function (a) {
	return {ctor: 'Name', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Radio$name = function (name) {
	return _rundis$elm_bootstrap$Bootstrap_Form_Radio$Name(name);
};
var _rundis$elm_bootstrap$Bootstrap_Form_Radio$radioList = F2(
	function (groupName, radios) {
		return A2(
			_elm_lang$core$List$map,
			function (_p7) {
				return _rundis$elm_bootstrap$Bootstrap_Form_Radio$view(
					_rundis$elm_bootstrap$Bootstrap_Form_Radio$addOption(
						_rundis$elm_bootstrap$Bootstrap_Form_Radio$name(groupName))(_p7));
			},
			radios);
	});
var _rundis$elm_bootstrap$Bootstrap_Form_Radio$Inline = {ctor: 'Inline'};
var _rundis$elm_bootstrap$Bootstrap_Form_Radio$inline = _rundis$elm_bootstrap$Bootstrap_Form_Radio$Inline;
var _rundis$elm_bootstrap$Bootstrap_Form_Radio$Checked = function (a) {
	return {ctor: 'Checked', _0: a};
};
var _rundis$elm_bootstrap$Bootstrap_Form_Radio$checked = function (isCheck) {
	return _rundis$elm_bootstrap$Bootstrap_Form_Radio$Checked(isCheck);
};
