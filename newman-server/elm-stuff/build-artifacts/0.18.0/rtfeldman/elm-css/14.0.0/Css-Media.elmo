var _rtfeldman$elm_css$Css_Media$unparameterizedFeature = function (key) {
	return {feature: key, value: _elm_lang$core$Maybe$Nothing};
};
var _rtfeldman$elm_css$Css_Media$feature = F2(
	function (key, _p0) {
		var _p1 = _p0;
		return {
			feature: key,
			value: _elm_lang$core$Maybe$Just(_p1.value)
		};
	});
var _rtfeldman$elm_css$Css_Media$scripting = function (value) {
	return A2(_rtfeldman$elm_css$Css_Media$feature, 'scripting', value);
};
var _rtfeldman$elm_css$Css_Media$enabled = {value: 'enabled', scriptingSupport: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css_Media$initialOnly = {value: 'initial-only', scriptingSupport: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css_Media$anyHover = function (value) {
	return A2(_rtfeldman$elm_css$Css_Media$feature, 'any-hover', value);
};
var _rtfeldman$elm_css$Css_Media$hover = function (value) {
	return A2(_rtfeldman$elm_css$Css_Media$feature, 'hover', value);
};
var _rtfeldman$elm_css$Css_Media$canHover = {value: 'hover', hoverCapability: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css_Media$anyPointer = function (value) {
	return A2(_rtfeldman$elm_css$Css_Media$feature, 'any-pointer', value);
};
var _rtfeldman$elm_css$Css_Media$pointer = function (value) {
	return A2(_rtfeldman$elm_css$Css_Media$feature, 'pointer', value);
};
var _rtfeldman$elm_css$Css_Media$coarse = {value: 'coarse', pointerDevice: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css_Media$fine = {value: 'fine', pointerDevice: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css_Media$colorGamut = function (value) {
	return A2(_rtfeldman$elm_css$Css_Media$feature, 'color-gamut', value);
};
var _rtfeldman$elm_css$Css_Media$rec2020 = {value: 'rec2020', colorGamut: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css_Media$p3 = {value: 'p3', colorGamut: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css_Media$srgb = {value: 'srgb', colorGamut: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css_Media$maxColorIndex = function (value) {
	return A2(_rtfeldman$elm_css$Css_Media$feature, 'max-color-index', value);
};
var _rtfeldman$elm_css$Css_Media$minColorIndex = function (value) {
	return A2(_rtfeldman$elm_css$Css_Media$feature, 'min-color-index', value);
};
var _rtfeldman$elm_css$Css_Media$colorIndex = function (value) {
	return A2(_rtfeldman$elm_css$Css_Media$feature, 'color-index', value);
};
var _rtfeldman$elm_css$Css_Media$maxMonochrome = function (value) {
	return A2(_rtfeldman$elm_css$Css_Media$feature, 'max-monochrome', value);
};
var _rtfeldman$elm_css$Css_Media$minMonochrome = function (value) {
	return A2(_rtfeldman$elm_css$Css_Media$feature, 'min-monochrome', value);
};
var _rtfeldman$elm_css$Css_Media$monochrome = _rtfeldman$elm_css$Css_Media$unparameterizedFeature('monochrome');
var _rtfeldman$elm_css$Css_Media$maxColor = function (value) {
	return A2(_rtfeldman$elm_css$Css_Media$feature, 'max-color', value);
};
var _rtfeldman$elm_css$Css_Media$color = _rtfeldman$elm_css$Css_Media$unparameterizedFeature('color');
var _rtfeldman$elm_css$Css_Media$minColor = function (value) {
	return A2(_rtfeldman$elm_css$Css_Media$feature, 'min-color', value);
};
var _rtfeldman$elm_css$Css_Media$bits = function (value) {
	return {
		value: _elm_lang$core$Basics$toString(value),
		bits: _rtfeldman$elm_css$Css_Structure$Compatible
	};
};
var _rtfeldman$elm_css$Css_Media$overflowInline = function (value) {
	return A2(_rtfeldman$elm_css$Css_Media$feature, 'overflow-inline', value);
};
var _rtfeldman$elm_css$Css_Media$overflowBlock = function (value) {
	return A2(_rtfeldman$elm_css$Css_Media$feature, 'overflow-block', value);
};
var _rtfeldman$elm_css$Css_Media$optionalPaged = {value: 'optional-paged', blockAxisOverflow: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css_Media$paged = {value: 'paged', blockAxisOverflow: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css_Media$update = function (value) {
	return A2(_rtfeldman$elm_css$Css_Media$feature, 'update', value);
};
var _rtfeldman$elm_css$Css_Media$fast = {value: 'fast', updateFrequency: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css_Media$slow = {value: 'slow', updateFrequency: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css_Media$grid = _rtfeldman$elm_css$Css_Media$unparameterizedFeature('grid');
var _rtfeldman$elm_css$Css_Media$scan = function (value) {
	return A2(_rtfeldman$elm_css$Css_Media$feature, 'scan', value);
};
var _rtfeldman$elm_css$Css_Media$interlace = {value: 'interlace', scanningProcess: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css_Media$progressive = {value: 'progressive', scanningProcess: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css_Media$maxResolution = function (value) {
	return A2(_rtfeldman$elm_css$Css_Media$feature, 'max-resolution', value);
};
var _rtfeldman$elm_css$Css_Media$resolution = function (value) {
	return A2(_rtfeldman$elm_css$Css_Media$feature, 'resolution', value);
};
var _rtfeldman$elm_css$Css_Media$minResolution = function (value) {
	return A2(_rtfeldman$elm_css$Css_Media$feature, 'min-resolution', value);
};
var _rtfeldman$elm_css$Css_Media$dppx = function (value) {
	return {
		value: A2(
			_elm_lang$core$Basics_ops['++'],
			_elm_lang$core$Basics$toString(value),
			'dppx'),
		resolution: _rtfeldman$elm_css$Css_Structure$Compatible
	};
};
var _rtfeldman$elm_css$Css_Media$dpcm = function (value) {
	return {
		value: A2(
			_elm_lang$core$Basics_ops['++'],
			_elm_lang$core$Basics$toString(value),
			'dpcm'),
		resolution: _rtfeldman$elm_css$Css_Structure$Compatible
	};
};
var _rtfeldman$elm_css$Css_Media$dpi = function (value) {
	return {
		value: A2(
			_elm_lang$core$Basics_ops['++'],
			_elm_lang$core$Basics$toString(value),
			'dpi'),
		resolution: _rtfeldman$elm_css$Css_Structure$Compatible
	};
};
var _rtfeldman$elm_css$Css_Media$orientation = function (value) {
	return A2(_rtfeldman$elm_css$Css_Media$feature, 'orientation', value);
};
var _rtfeldman$elm_css$Css_Media$portrait = {value: 'portrait', orientation: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css_Media$landscape = {value: 'landscape', orientation: _rtfeldman$elm_css$Css_Structure$Compatible};
var _rtfeldman$elm_css$Css_Media$maxAspectRatio = function (value) {
	return A2(_rtfeldman$elm_css$Css_Media$feature, 'max-aspect-ratio', value);
};
var _rtfeldman$elm_css$Css_Media$aspectRatio = function (value) {
	return A2(_rtfeldman$elm_css$Css_Media$feature, 'aspect-ratio', value);
};
var _rtfeldman$elm_css$Css_Media$minAspectRatio = function (value) {
	return A2(_rtfeldman$elm_css$Css_Media$feature, 'min-aspect-ratio', value);
};
var _rtfeldman$elm_css$Css_Media$ratio = F2(
	function (numerator, denominator) {
		return {
			value: A2(
				_elm_lang$core$Basics_ops['++'],
				_elm_lang$core$Basics$toString(numerator),
				A2(
					_elm_lang$core$Basics_ops['++'],
					'/',
					_elm_lang$core$Basics$toString(denominator))),
			ratio: _rtfeldman$elm_css$Css_Structure$Compatible
		};
	});
var _rtfeldman$elm_css$Css_Media$maxHeight = function (value) {
	return A2(_rtfeldman$elm_css$Css_Media$feature, 'max-height', value);
};
var _rtfeldman$elm_css$Css_Media$height = function (value) {
	return A2(_rtfeldman$elm_css$Css_Media$feature, 'height', value);
};
var _rtfeldman$elm_css$Css_Media$minHeight = function (value) {
	return A2(_rtfeldman$elm_css$Css_Media$feature, 'min-height', value);
};
var _rtfeldman$elm_css$Css_Media$maxWidth = function (value) {
	return A2(_rtfeldman$elm_css$Css_Media$feature, 'max-width', value);
};
var _rtfeldman$elm_css$Css_Media$width = function (value) {
	return A2(_rtfeldman$elm_css$Css_Media$feature, 'width', value);
};
var _rtfeldman$elm_css$Css_Media$minWidth = function (value) {
	return A2(_rtfeldman$elm_css$Css_Media$feature, 'min-width', value);
};
var _rtfeldman$elm_css$Css_Media$speech = _rtfeldman$elm_css$Css_Structure$Speech;
var _rtfeldman$elm_css$Css_Media$screen = _rtfeldman$elm_css$Css_Structure$Screen;
var _rtfeldman$elm_css$Css_Media$print = _rtfeldman$elm_css$Css_Structure$Print;
var _rtfeldman$elm_css$Css_Media$connectWith = F2(
	function (connect, queries) {
		var _p2 = queries;
		if (_p2.ctor === '[]') {
			return _elm_lang$core$Maybe$Nothing;
		} else {
			var _p4 = _p2._0;
			var _p3 = A2(_rtfeldman$elm_css$Css_Media$connectWith, connect, _p2._1);
			if (_p3.ctor === 'Nothing') {
				return _elm_lang$core$Maybe$Just(_p4);
			} else {
				return _elm_lang$core$Maybe$Just(
					A2(connect, _p4, _p3._0));
			}
		}
	});
var _rtfeldman$elm_css$Css_Media$not = _rtfeldman$elm_css$Css_Structure$NotQuery;
var _rtfeldman$elm_css$Css_Media$only = _rtfeldman$elm_css$Css_Structure$OnlyQuery;
var _rtfeldman$elm_css$Css_Media$all = _rtfeldman$elm_css$Css_Structure$AllQuery;
var _rtfeldman$elm_css$Css_Media$withMediaQuery = function (queries) {
	return _rtfeldman$elm_css$Css_Preprocess$WithMedia(
		A2(_elm_lang$core$List$map, _rtfeldman$elm_css$Css_Structure$CustomQuery, queries));
};
var _rtfeldman$elm_css$Css_Media$withMedia = function (queries) {
	return _rtfeldman$elm_css$Css_Preprocess$WithMedia(queries);
};
var _rtfeldman$elm_css$Css_Media$Ratio = F2(
	function (a, b) {
		return {value: a, ratio: b};
	});
var _rtfeldman$elm_css$Css_Media$Landscape = F2(
	function (a, b) {
		return {value: a, orientation: b};
	});
var _rtfeldman$elm_css$Css_Media$Portrait = F2(
	function (a, b) {
		return {value: a, orientation: b};
	});
var _rtfeldman$elm_css$Css_Media$Resolution = F2(
	function (a, b) {
		return {value: a, resolution: b};
	});
var _rtfeldman$elm_css$Css_Media$Progressive = F2(
	function (a, b) {
		return {value: a, scanningProcess: b};
	});
var _rtfeldman$elm_css$Css_Media$Interlace = F2(
	function (a, b) {
		return {value: a, scanningProcess: b};
	});
var _rtfeldman$elm_css$Css_Media$Slow = F2(
	function (a, b) {
		return {value: a, updateFrequency: b};
	});
var _rtfeldman$elm_css$Css_Media$Fast = F2(
	function (a, b) {
		return {value: a, updateFrequency: b};
	});
var _rtfeldman$elm_css$Css_Media$Paged = F2(
	function (a, b) {
		return {value: a, blockAxisOverflow: b};
	});
var _rtfeldman$elm_css$Css_Media$OptionalPaged = F2(
	function (a, b) {
		return {value: a, blockAxisOverflow: b};
	});
var _rtfeldman$elm_css$Css_Media$Bits = F2(
	function (a, b) {
		return {value: a, bits: b};
	});
var _rtfeldman$elm_css$Css_Media$SRGB = F2(
	function (a, b) {
		return {value: a, colorGamut: b};
	});
var _rtfeldman$elm_css$Css_Media$P3 = F2(
	function (a, b) {
		return {value: a, colorGamut: b};
	});
var _rtfeldman$elm_css$Css_Media$Rec2020 = F2(
	function (a, b) {
		return {value: a, colorGamut: b};
	});
var _rtfeldman$elm_css$Css_Media$Fine = F2(
	function (a, b) {
		return {value: a, pointerDevice: b};
	});
var _rtfeldman$elm_css$Css_Media$Coarse = F2(
	function (a, b) {
		return {value: a, pointerDevice: b};
	});
var _rtfeldman$elm_css$Css_Media$CanHover = F2(
	function (a, b) {
		return {value: a, hoverCapability: b};
	});
var _rtfeldman$elm_css$Css_Media$InitialOnly = F2(
	function (a, b) {
		return {value: a, scriptingSupport: b};
	});
var _rtfeldman$elm_css$Css_Media$Enabled = F2(
	function (a, b) {
		return {value: a, scriptingSupport: b};
	});
